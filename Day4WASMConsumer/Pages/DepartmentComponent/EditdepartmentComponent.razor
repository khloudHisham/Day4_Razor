@page "/Dep/Edit/{id:int}"
<h3>EditdepartmentComponent</h3>
@if (depratment != null)
{
    <EditForm Model="depratment" OnSubmit="Save">
        <div>
            <label>Name</label>
            <InputText class="form form-control" @bind-Value="depratment.Name" />
        </div>
        <div>
            <label>address</label>
            <InputText class="form form-control" @bind-Value="depratment.Description" />
        </div>
        <div>
            <label>Depart  Name</label>
            <InputText class="form form-control" @bind-Value="depratment.Location" />
        </div>
        <div>
            <label>Super Visor   Name</label>
            <InputText class="form form-control" @bind-Value="depratment.Manager />
        </div>
        <div>
            <label>Age</label>
            <InputNumber class=" form form-control" @bind-Value="depratment.Student" />
        </div>
        <input type="submit" class="btn btn-success" value="save" />
    </EditForm>
}
else
{
    <h2>unvalid id or wait  </h2>
}
@code {
    [Parameter]
    public int id { get; set; }

    public Department department { get; set; }

    [Inject]
    public IServices<Department> DeptServices { get; set; }
    [Inject]
    public NavigationManager navigationManager { get; set; }

    protected override async Task OnInitializedAsync()
    {
        department = await DeptServices.GetById(id);

        base.OnInitializedAsync();
    }
    async Task Save()
    {
        Console.WriteLine("Data Save");
        await DeptServices.Update(id, department);
        navigationManager.NavigateTo("/Depts");
    }
}